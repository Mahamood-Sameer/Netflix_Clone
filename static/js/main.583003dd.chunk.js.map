{"version":3,"sources":["Movieapp/axios.js","Movieapp/Movie_rows.js","Movieapp/requests.js","Movieapp/Banner.js","Movieapp/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Movie_rows","props","clickHandler","movie","state","open","setState","trailerURL","movieTrailer","name","title","original_title","original_name","then","url","urlParams","URLSearchParams","URL","search","get","catch","error","alert","message","movies","classname","calssname__nav_front","calssname__nav_back","this","fetchURL","result","data","results","opts","height","width","playerVars","autoplay","className","map","src","isLarge","poster_path","backdrop_path","alt","onClick","id","console","log","Dialog","onClose","DialogTitle","DialogContent","videoId","DialogActions","Button","document","querySelector","scrollBy","PureComponent","API_KEY","requests","Trending","NetflixOriginals","Toprated","Action","Comedy","Horror","Romance","Documentries","Banner","random","Math","floor","style","backgroundSize","backgroundImage","backgroundPosition","overview","Component","Nav","show","window","addEventListener","scrollY","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.583003dd.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL : \"https://api.themoviedb.org/3\",\r\n});\r\n\r\n\r\nexport default instance","\r\nimport React, { Component , PureComponent} from 'react'\r\nimport instance from './axios'\r\nimport \"./Movie_rows.css\"\r\nimport YouTube from 'react-youtube'\r\nimport movieTrailer from 'movie-trailer'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport { Button } from '@material-ui/core';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nclass Movie_rows extends PureComponent {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            movies: [],\r\n            url: \"https://images.tmdb.org/t/p/original/\",\r\n            trailerURL: \"\",\r\n            classname: `movie__rows ${this.props.title}`,\r\n            calssname__nav_front: `Arrows ${this.props.title}`,\r\n            calssname__nav_back: `Arrows ${this.props.title}`,\r\n            open: false\r\n        }\r\n    }\r\n\r\n    clickHandler = (movie) => {\r\n        if (this.state.open === false) {\r\n            this.setState({\r\n                open: true\r\n            })\r\n        }\r\n\r\n        if (this.state.trailerURL !== \"\") {\r\n            this.setState({\r\n                trailerURL: \"\"\r\n            })\r\n\r\n        }\r\n        if (this.state.trailerURL === \"\") {\r\n            movieTrailer(movie?.name || movie?.title || movie?.original_title || movie?.original_name || \"\").then((url) => {\r\n                const urlParams = new URLSearchParams(new URL(url).search);\r\n                this.setState({\r\n                    trailerURL: urlParams.get('v')\r\n                })\r\n\r\n            }).catch((error) => { alert(error.message) })\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        instance.get(this.props.fetchURL).then((result) => {\r\n            this.setState({\r\n                movies: result.data.results\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n        const opts = {\r\n            height: '450',\r\n            width: '400',\r\n            playerVars: {\r\n                // https://developers.google.com/youtube/player_parameters\r\n                autoplay: 0,\r\n            },\r\n        };\r\n\r\n\r\n        return (\r\n            <div className=\"movie__row_container\">\r\n                <h3>{this.props.title}</h3>\r\n                <div className={this.state.classname}>\r\n                    {\r\n                        this.state.movies.map((movie) => {\r\n                            return (\r\n                                <>\r\n                                    <img src={`${this.state.url}${this.props.isLarge ? movie.poster_path : movie.backdrop_path}`} alt={movie.name} className={this.props.isLarge ? \"Large_postre\" : \"movie__poster\"} key={movie.id} onClick={() => { this.clickHandler(movie) }} ></img>\r\n\r\n                                    {/* Dialouge Boxes */}\r\n\r\n\r\n                                    {\r\n                                        (this.state.trailerURL && this.state.open===true) &&\r\n                                        <div className=\"video\">\r\n                                            {\r\n                                                console.log()\r\n                                            }\r\n                                            <Dialog open={this.state.open} onClose={() => {\r\n                                                this.setState({\r\n                                                    open: false\r\n                                                })\r\n                                            }}>\r\n                                                <DialogTitle>Trailer</DialogTitle>\r\n                                                <DialogContent>\r\n                                                    <center>\r\n                                                    {this.state.trailerURL && <YouTube className=\"trailer\" videoId={this.state.trailerURL} opts={opts}></YouTube>}\r\n                                                    </center>\r\n                                                </DialogContent>\r\n                                                <DialogActions>\r\n                                                    <Button onClick={() => {\r\n                                                        this.setState({\r\n                                                            trailerURL: \"\",\r\n                                                            open: false,\r\n                                                        })\r\n                                                    }}>Cancel</Button>\r\n                                                </DialogActions>\r\n                                            </Dialog>\r\n                                        </div>\r\n                                    }\r\n\r\n                                </>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n\r\n                <div className=\"navigationArrows\">\r\n                    <ArrowBackIcon className={this.state.calssname__nav_back} onClick={() => {\r\n                        if (this.props.title === \"NETFLIX ORIGINALS\") {\r\n                            document.querySelector('.NETFLIX').scrollBy(-650, 0)\r\n                        }\r\n                        else {\r\n                            document.querySelector(`.${this.props.title}`).scrollBy(-650, 0)\r\n                        }\r\n                    }} />\r\n                    <ArrowForwardIcon className={this.state.calssname__nav_front} onClick={() => {\r\n                        if (this.props.title === \"NETFLIX ORIGINALS\") {\r\n                            document.querySelector('.NETFLIX').scrollBy(650, 0)\r\n                        }\r\n                        else {\r\n                            document.querySelector(`.${this.props.title}`).scrollBy(650, 0)\r\n                        }\r\n                    }} />\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Movie_rows\r\n","const API_KEY = \"f9498b3fbd83450039a119fb2800b2dd\";\r\n\r\n\r\nconst requests = {\r\n     Trending : `/trending/all/week?api_key=${API_KEY}&language=en-US` ,\r\n     NetflixOriginals : `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n     Toprated : `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n     Action : `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n     Comedy : `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n     Horror : `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n     Romance : `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n     Documentries : `/discover/movie?api_key=${API_KEY}&with_genres=99`\r\n}\r\n\r\n\r\n\r\nexport default requests\r\n","import React, { Component } from 'react'\r\nimport './Banner.css'\r\nimport instance from './axios'\r\nimport requests from './requests'\r\n\r\n\r\nclass Banner extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             movie : ''\r\n        }\r\n    }\r\n    \r\n    componentDidMount(){\r\n        instance.get(requests.NetflixOriginals).then((result)=>{\r\n            let random=(Math.floor(Math.random() * (19-0)))\r\n            this.setState({\r\n                movie:result.data.results[random]\r\n            })\r\n            \r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"banner\"\r\n                style={{\r\n                    backgroundSize : \"cover\",\r\n                    backgroundImage:`url(https://images.tmdb.org/t/p/original/${this.state.movie.backdrop_path})`,\r\n                    backgroundPosition:\"center center\"\r\n                }}\r\n                >\r\n                <div className=\"banner__content\">\r\n                        <h1 className=\"banner__title\">{this.state.movie?.title || this.state.movie?.name || this.state.movie?.original_name}</h1>\r\n                        <div className=\"banner_buttons\">\r\n                            <button className=\"banner_button\">Play</button>\r\n                            <button className=\"banner_button\">My List</button>\r\n                        </div>\r\n                        <h3 className=\"banner__description\">{this.state.movie.overview}</h3>\r\n                </div>\r\n                <div className=\"banner_fadeBottom\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Banner\r\n\r\n","import React, { Component } from 'react'\r\nimport './Nav.css'\r\nclass Nav extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             show:false\r\n        }\r\n    }\r\n    \r\n    componentDidMount(){\r\n        window.addEventListener(\"scroll\",()=>{\r\n            if(window.scrollY > 100){\r\n                this.setState({\r\n                    show:true\r\n                })\r\n            }\r\n            else{\r\n                this.setState({\r\n                    show:false\r\n                })\r\n            }\r\n        })\r\n\r\n    }\r\n    \r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className={`nav ${this.state.show && \"nav__black\"}`}>\r\n                <img className=\"nav__logo\" src=\"https://www.freepnglogos.com/uploads/netflix-logo-history-png-33.png\" alt=\"Netflix Logo\">\r\n                </img>\r\n                <button className=\"nav__signin\">Sign In</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Nav\r\n","import './App.css';\r\nimport Movie_rows from './Movieapp/Movie_rows';\r\nimport requests from './Movieapp/requests';\r\nimport Banner from './Movieapp/Banner';\r\nimport Nav from './Movieapp/Nav';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Nav />\r\n      <Banner />\r\n      <Movie_rows title=\"NETFLIX ORIGINALS\" fetchURL={requests.NetflixOriginals} isLarge={true} />\r\n      <Movie_rows title=\"Trending\" fetchURL={requests.Trending} />\r\n      <Movie_rows title=\"Toprated\" fetchURL={requests.Toprated}/>\r\n      <Movie_rows title=\"Action\" fetchURL={requests.Action}/>\r\n      <Movie_rows title=\"Comedy\" fetchURL={requests.Comedy} />\r\n      <Movie_rows title=\"Horror\" fetchURL={requests.Horror}/>\r\n      <Movie_rows title=\"Romance\" fetchURL={requests.Romance}/>\r\n      <Movie_rows title=\"Documentries\" fetchURL={requests.Documentries}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}