{"version":3,"sources":["Movieapp/axios.js","Movieapp/Movie_rows.js","Movieapp/requests.js","Movieapp/Banner.js","Movieapp/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Movie_rows","props","clickHandler","movie","state","trailerURL","setState","movieTrailer","name","title","original_title","original_name","then","url","urlParams","URLSearchParams","URL","search","get","catch","error","console","log","movies","this","fetchURL","result","data","results","className","map","src","isLarge","poster_path","backdrop_path","alt","onClick","id","videoId","opts","height","width","playerVars","autoplay","Component","API_KEY","requests","Trending","NetflixOriginals","Toprated","Action","Comedy","Horror","Romance","Documentries","Banner","random","Math","floor","style","backgroundSize","backgroundImage","backgroundPosition","overview","Nav","show","window","addEventListener","scrollY","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08ec63b6.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL : \"https://api.themoviedb.org/3\",\r\n});\r\n\r\n\r\nexport default instance","// import { LocalConvenienceStoreOutlined } from '@material-ui/icons'\r\nimport React, { Component } from 'react'\r\nimport instance from './axios'\r\nimport \"./Movie_rows.css\"\r\nimport YouTube from 'react-youtube'\r\nimport movieTrailer from 'movie-trailer'\r\nclass Movie_rows extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            movies: [],\r\n            url: \"https://images.tmdb.org/t/p/original/\",\r\n            trailerURL:\"\"\r\n        }\r\n    }\r\n\r\n    clickHandler = (movie)=>{\r\n        if(this.state.trailerURL){\r\n            this.setState({\r\n                trailerURL:\"\"\r\n            })\r\n        }\r\n        else{\r\n            movieTrailer(movie?.name || movie?.title || movie?.original_title || movie?.original_name|| \"\").then((url)=>{\r\n                const urlParams=new URLSearchParams(new URL(url).search);\r\n                this.setState({\r\n                    trailerURL:urlParams.get('v')\r\n                })\r\n            }).catch((error)=>{console.log(error)})\r\n        }\r\n    }\r\n\r\n\r\n\r\n    \r\n    componentDidMount() {\r\n        instance.get(this.props.fetchURL).then((result) => {\r\n            this.setState({\r\n                movies: result.data.results\r\n            })\r\n            console.log(result.data.results)\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n        const opts = {\r\n            height: '390',\r\n            width: '340',\r\n            playerVars: {\r\n              // https://developers.google.com/youtube/player_parameters\r\n              autoplay: 1,\r\n            },\r\n          };\r\n\r\n\r\n        return (\r\n            <div className=\"movie__row_container\">\r\n                <h3>{this.props.title}</h3>\r\n                <div className=\"movie__rows\">\r\n                    {\r\n                        this.state.movies.map((movie) => {\r\n                            return (\r\n\r\n                                <img src={`${this.state.url}${this.props.isLarge ? movie.poster_path : movie.backdrop_path}`} alt={movie.name} className={this.props.isLarge ? \"Large_postre\" : \"movie__poster\"} key={movie.id}  onClick={()=>{this.clickHandler(movie)}} ></img>\r\n\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                <div className=\"video\">\r\n\r\n                {this.state.trailerURL && <YouTube videoId={this.state.trailerURL} opts={opts}></YouTube>}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Movie_rows\r\n","const API_KEY = \"f9498b3fbd83450039a119fb2800b2dd\";\r\n\r\n\r\nconst requests = {\r\n     Trending : `/trending/all/week?api_key=${API_KEY}&language=en-US` ,\r\n     NetflixOriginals : `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n     Toprated : `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n     Action : `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n     Comedy : `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n     Horror : `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n     Romance : `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n     Documentries : `/discover/movie?api_key=${API_KEY}&with_genres=99`\r\n}\r\n\r\n\r\n\r\nexport default requests\r\n","import React, { Component } from 'react'\r\nimport './Banner.css'\r\nimport instance from './axios'\r\nimport requests from './requests'\r\n\r\n\r\nclass Banner extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             movie : ''\r\n        }\r\n    }\r\n    \r\n    componentDidMount(){\r\n        instance.get(requests.NetflixOriginals).then((result)=>{\r\n            let random=(Math.floor(Math.random() * (19-0)))\r\n            this.setState({\r\n                movie:result.data.results[random]\r\n            })\r\n            console.log(this.state.movie)\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"banner\"\r\n                style={{\r\n                    backgroundSize : \"cover\",\r\n                    backgroundImage:`url(https://images.tmdb.org/t/p/original/${this.state.movie.backdrop_path})`,\r\n                    backgroundPosition:\"center center\"\r\n                }}\r\n                >\r\n                <div className=\"banner__content\">\r\n                        <h1 className=\"banner__title\">{this.state.movie?.title || this.state.movie?.name || this.state.movie?.original_name}</h1>\r\n                        <div className=\"banner_buttons\">\r\n                            <button className=\"banner_button\">Play</button>\r\n                            <button className=\"banner_button\">My List</button>\r\n                        </div>\r\n                        <h3 className=\"banner__description\">{this.state.movie.overview}</h3>\r\n                </div>\r\n                <div className=\"banner_fadeBottom\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Banner\r\n\r\n","import React, { Component } from 'react'\r\nimport './Nav.css'\r\nclass Nav extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             show:false\r\n        }\r\n    }\r\n    \r\n    componentDidMount(){\r\n        window.addEventListener(\"scroll\",()=>{\r\n            if(window.scrollY > 100){\r\n                this.setState({\r\n                    show:true\r\n                })\r\n            }\r\n            else{\r\n                this.setState({\r\n                    show:false\r\n                })\r\n            }\r\n        })\r\n\r\n    }\r\n    \r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className={`nav ${this.state.show && \"nav__black\"}`}>\r\n                <img className=\"nav__logo\" src=\"https://www.freepnglogos.com/uploads/netflix-logo-history-png-33.png\" alt=\"Netflix Logo\">\r\n                </img>\r\n                <button className=\"nav__signin\">Sign In</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Nav\r\n","import './App.css';\nimport Movie_rows from './Movieapp/Movie_rows';\nimport requests from './Movieapp/requests';\nimport Banner from './Movieapp/Banner';\nimport Nav from './Movieapp/Nav';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Nav />\n      <Banner />\n      <Movie_rows title=\"NETFLIX ORIGINALS\" fetchURL={requests.NetflixOriginals} isLarge={true} />\n      <Movie_rows title=\"Trending\" fetchURL={requests.Trending} />\n      <Movie_rows title=\"Toprated\" fetchURL={requests.Toprated} />\n      <Movie_rows title=\"Action\" fetchURL={requests.Action} />\n      <Movie_rows title=\"Comedy\" fetchURL={requests.Comedy} />\n      <Movie_rows title=\"Horror\" fetchURL={requests.Horror} />\n      <Movie_rows title=\"Romance\" fetchURL={requests.Romance} />\n      <Movie_rows title=\"Documentries\" fetchURL={requests.Documentries} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}